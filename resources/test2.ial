institution starWars;
% TYPES ----------
type Agent;
type Role;
type Trope;
type Phase;
type Place;
type PlaceName;
type Quest;
type Object;

% FLUENTS ----------
fluent role(Agent, Role);
fluent phase(Trope, Phase);
fluent place(PlaceName, Place);
fluent at(Agent, Place);

% EXTERNAL EVENTS: The Hero's Journey ----------
exogenous event dispatch(Agent, Agent, Quest);
exogenous event go(Agent, PlaceName);
exogenous event complete(Agent, Quest);
exogenous event meet(Agent, Agent);
% CREATION EVENT -----------
create event startShow;

% INST EVENTS: The Hero's Journey ----------
inst event intHerosJourney(Agent, Agent, Object, PlaceName, PlaceName, Quest);
% INITIATES: The Hero's Journey ----------
intHerosJourney(R, S, T, U, V, W) initiates phase(herosJourney, phaseA), perm(go(R, V)) if phase(herosJourney, inactive), role(R, hero), place(V, home);
intHerosJourney(R, S, T, U, V, W) initiates phase(herosJourney, phaseB), perm(meet(R, S)) if phase(herosJourney, phaseA), role(S, dispatcher), role(R, hero);
intHerosJourney(R, S, T, U, V, W) initiates phase(herosJourney, phaseC), perm(dispatch(R, S, W)) if phase(herosJourney, phaseB), role(R, hero), role(S, dispatcher), quest(W, quest);
intHerosJourney(R, S, T, U, V, W) initiates phase(herosJourney, phaseD), perm(destroy(R, T)) if phase(herosJourney, phaseC), role(R, hero), object(T, object);
intHerosJourney(R, S, T, U, V, W) initiates phase(herosJourney, phaseE), perm(go(R, U)) if phase(herosJourney, phaseD), role(R, hero), place(U, away);
intHerosJourney(R, S, T, U, V, W) initiates phase(herosJourney, phaseF), perm(complete(R, W)) if phase(herosJourney, phaseE), role(R, hero), quest(W, quest);
intHerosJourney(R, S, T, U, V, W) initiates phase(herosJourney, phaseG), perm(go(R, V)) if phase(herosJourney, phaseF), role(R, hero), place(V, home);
intHerosJourney(R, S, T, U, V, W) initiates phase(herosJourney, done) if phase(herosJourney, phaseG);
% TERMINATES: The Hero's Journey ----------
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, inactive) if phase(herosJourney, inactive);
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, phaseA), perm(go(R, V)) if phase(herosJourney, phaseA);
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, phaseB), perm(meet(R, S)) if phase(herosJourney, phaseB);
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, phaseC), perm(dispatch(R, S, W)) if phase(herosJourney, phaseC);
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, phaseD), perm(destroy(R, T)) if phase(herosJourney, phaseD);
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, phaseE), perm(go(R, U)) if phase(herosJourney, phaseE);
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, phaseF), perm(complete(R, W)) if phase(herosJourney, phaseF);
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, phaseG), perm(go(R, V)) if phase(herosJourney, phaseG);
intHerosJourney(R, S, T, U, V, W) terminates phase(herosJourney, done) if phase(herosJourney, done);
% GENERATES: The Hero's Journey ----------
go(R, U) generates intHerosJourney(R, S, T, U, V, W) if role(R, hero), place(V, home);
dispatch(R, S, W) generates intHerosJourney(R, S, T, U, V, W) if role(S, dispatcher), role(R, hero);
meet(R, S) generates intHerosJourney(R, S, T, U, V, W) if role(R, hero), role(S, dispatcher), quest(W, quest);
go(R, V) generates intHerosJourney(R, S, T, U, V, W) if role(R, hero), object(T, object);
destroy(R, T) generates intHerosJourney(R, S, T, U, V, W) if role(R, hero), place(U, away);
complete(R, W) generates intHerosJourney(R, S, T, U, V, W) if role(R, hero), quest(W, quest);

% INITIALLY: -----------
initially
    pow(intHerosJourney(R, S, T, U, V, W)),
    phase(herosJourney, inactive);
