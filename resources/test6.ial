institution starWars;
% TYPES ----------
type Agent;
type Role;
type Trope;
type Phase;
type Place;
type PlaceName;
type Quest;
type Object;
type ObjectName;

% FLUENTS ----------
fluent role(Agent, Role);
fluent phase(Trope, Phase);
fluent place(PlaceName, Place);
fluent object(ObjectName, Object);
fluent at(Agent, Place);

% EXTERNAL EVENTS: The Hero's Journey ----------
exogenous event go(Agent, PlaceName);
exogenous event meet(Agent, Agent);
exogenous event noDeadline;
% VIOLATION EVENTS: The Hero's Journey ----------
violation event noViolation;
% INST EVENTS: The Hero's Journey ----------
inst event intHerosJourney(Agent, Agent, Agent, PlaceName, PlaceName);
inst event intGo(Agent, PlaceName);
% OBLIGATION FLUENTS: The Hero's Journey ----------
obligation fluent obl(go(Agent, PlaceName), go(Agent, PlaceName), noViolation);
% INITIATES: The Hero's Journey ----------
intHerosJourney(R, S, T, U, V) initiates phase(herosJourney, phaseA), perm(go(R, V)) if phase(herosJourney, inactive), role(R, hero), place(V, home);
intHerosJourney(R, S, T, U, V) initiates phase(herosJourney, phaseB), obl(go(R, U), go(S, V), noViolation) if phase(herosJourney, phaseA), role(R, hero), place(U, away), role(S, villain), place(V, home);
intHerosJourney(R, S, T, U, V) initiates phase(herosJourney, phaseC), perm(meet(R, T)) if phase(herosJourney, phaseB), role(T, dispatcher), role(R, hero);
intHerosJourney(R, S, T, U, V) initiates phase(herosJourney, phaseD), perm(go(R, V)) if phase(herosJourney, phaseC), role(R, hero), place(V, home);
intHerosJourney(R, S, T, U, V) initiates phase(herosJourney, done) if phase(herosJourney, phaseD);
% TERMINATES: The Hero's Journey ----------
intHerosJourney(R, S, T, U, V) terminates phase(herosJourney, inactive) if phase(herosJourney, inactive);
intHerosJourney(R, S, T, U, V) terminates phase(herosJourney, phaseA), perm(go(R, V)) if phase(herosJourney, phaseA);
intHerosJourney(R, S, T, U, V) terminates phase(herosJourney, phaseB), obl(go(R, U), go(S, V), noViolation) if phase(herosJourney, phaseB);
intHerosJourney(R, S, T, U, V) terminates phase(herosJourney, phaseC), perm(meet(R, T)) if phase(herosJourney, phaseC);
intHerosJourney(R, S, T, U, V) terminates phase(herosJourney, phaseD), perm(go(R, V)) if phase(herosJourney, phaseD);
intHerosJourney(R, S, T, U, V) terminates phase(herosJourney, done) if phase(herosJourney, done);
intGo(S, U) terminates obl(go(R, T), go(S, U), noViolation) if role(R, hero), place(T, away), role(S, villain), place(U, home);
% GENERATES: The Hero's Journey ----------
meet(R, T) generates intHerosJourney(R, S, T, U, V) if role(T, dispatcher), role(R, hero);
go(R, V) generates intHerosJourney(R, S, T, U, V) if role(R, hero), place(V, home);
go(R, T) generates intGo(R, T) if role(R, hero), place(T, away);

% INITIALLY: -----------
initially
    pow(intHerosJourney(R, S, T, U, V)),
    pow(intGo(S, U)),
    phase(herosJourney, inactive),
    role(lukeSkywalker, hero),
    role(obiWan, dispatcher),
    role(darthVader, villain),
    place(tatooine, home),
    place(space, away);
