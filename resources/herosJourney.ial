% TYPES ----------
type Agent;
type Role;
type Trope;
type Phase;
type Object;

% FLUENTS ----------
fluent role(Agent, Role);
fluent phase(Trope, Phase);

% EXTERNAL EVENTS: The Hero's Journey ----------
external event is(X, Y);
external event gets(X, Y);
external event returns(X, Y);
external event (X);
% EXTERNAL EVENTS: The Evil Empire ----------
external event does(X, Y);
external event fights(X, Y);
external event is(X, Y);
external event (X);


% INST EVENTS: The Hero's Journey ----------
inst event intHerosJourney();
% INST EVENTS: The Evil Empire ----------
inst event intEvilEmpire();


% INITIATES: The Hero's Journey ----------
intHerosJourney() initiates phase(herosJourney, phaseA), perm(is(X, Y)) if role(X, hero), phase(herosJourney, inactive);
intHerosJourney() initiates phase(herosJourney, phaseB), perm(gets(X, Y)) if role(X, hero), phase(herosJourney, phaseA);
intHerosJourney() initiates phase(herosJourney, phaseC), perm(returns(X, Y)) if role(X, hero), phase(herosJourney, phaseB);
intHerosJourney() initiates perm(gets(X, Y)) if role(X, hero);
intGets(X, Y) initiates perm((X)) if ;
intGets(X, Y) initiates perm(bring(X, Y)) if role(X, hero);
intGets(X, Y) initiates perm(destroy(X, Y)) if role(X, hero);
% INITIATES: The Evil Empire ----------
intEvilEmpire() initiates phase(evilEmpire, phaseA), perm(does(X, Y)) if role(X, villain), phase(evilEmpire, inactive);
intEvilEmpire() initiates phase(evilEmpire, phaseB), perm(fights(X, Y)) if role(X, villain), phase(evilEmpire, phaseA);
intEvilEmpire() initiates phase(evilEmpire, phaseC), perm(is(X, Y)) if role(X, villain), phase(evilEmpire, phaseB);
intEvilEmpire() initiates perm(gets(X, Y)) if role(X, villain);
intGets(X, Y) initiates perm(kill(X, Y)) if role(X, villain);


% GENERATES: The Hero's Journey ----------
gets(X, Y) generates intGets(X, Y) if role(X, hero);
% GENERATES: The Evil Empire ----------
gets(X, Y) generates intGets(X, Y) if role(X, villain);