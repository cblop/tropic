%% TYPES ---------------------
type Agent;
type Role;
type Object;
type Trope;
type Phase;

%% FLUENTS ---------------------
fluent role(Agent, Role);
fluent phase(Trope, Phase)

%% EXTERNAL EVENTS --------------------
external event give(Agent, Agent, Object);
external event leave(Agent);
external event take(Agent, Object);
external event break(Agent, Object);
external event scene(Scene)

%% INST EVENTS ------------------------
inst event intDontTouchIt(Agent, Agent, Object);

%% TROPES ---------------------
intDontTouchIt(X, Y, Z) initiates perm(give(X, Y, Z)), phase(dontTouchIt, phaseA) if role(X, dispatcher), role(Y, hero), object(Z), phase(dontTouchIt, inactive)
give(X, Y, Z) generates intDontTouchIt(X, Y, Z) if role (X, dispatcher), role(Y, hero), object(Z), phase(dontTouchIt, phaseA)

intDontTouchIt(X, Y, Z) initiates perm(leave(X)), phase(dontTouchIt, phaseB) if role(X, dispatcher), phase(dontTouchIt, phaseA);
leave(X) generates intDontTouchIt(X, Y, Z) if role(X, dispatcher), phase(dontTouchIt, phaseB);

intDontTouchIt(X, Y, Z) initiates perm(take(X, Y)), phase(dontTouchIt, phaseC) if role(X, rogue), object(Y), phase(dontTouchIt, phaseB);
take(X, Y) generates intDontTouchIt(X, Y, Z) if role(X, rogue), object(Y), phase(dontTouchIt, phaseC);

intDontTouchIt(X, Y, Z) initiates perm(break(X, Y)), phase(dontTouchIt, phaseD) if role(X, hero), object(Y), phase(dontTouchIt, phaseC);
break(X, Y) generates intDontTouchIt(X, Y, Z) if role(X, hero), object(Y), phase(dontTouchIt, phaseD);

intDontTouchIt(X, Y, Z) initiates perm(return(X)), phase(dontTouchIt, done) if role(X, dispatcher), phase(dontTouchIt, phaseD);

%% SCENES ---------------------
%% a director agent might have to generate this external event
scene(sausages) generates intSausages(punch, joey, sausages)

intSausages(X, Y, Z) initiates role(X, hero), role(Y, dispatcher), object(Z) if phase(dontTouchIt, inactive)
intSausages(X, Y, Z) generates intDontTouchIt(X, Y, Z)
intSausages(X, Y, Z) terminates role(X, hero), role(Y, dispatcher), object(Z) if phase(dontTouchIt, done)

%% INITIALLY
initially:
  phase(dontTouchIt, inactive)


